/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package buscadorscroll;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.KeyEvent;
import java.text.Normalizer;
import java.util.ArrayList;
import java.util.List;
import javax.swing.Box.Filler;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollBar;

/**
 *
 * @author Daniel Casado
 */
public class FramePrincipal extends javax.swing.JFrame {

    int posicion = 0;

    List<Persona> listaPersonas = new ArrayList<>();

    /**
     * Creates new form FramePrincipal
     */
    public FramePrincipal() {
        initComponents();
        cargarComodines();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        panelTitulo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        panelBuscador = new javax.swing.JPanel();
        textFieldBuscador = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        panelPadrePersonas = new javax.swing.JPanel();
        scrollPersonas = new javax.swing.JScrollPane();
        panelPersonas = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel1.setText("BUSCADOR");

        javax.swing.GroupLayout panelTituloLayout = new javax.swing.GroupLayout(panelTitulo);
        panelTitulo.setLayout(panelTituloLayout);
        panelTituloLayout.setHorizontalGroup(
            panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(883, Short.MAX_VALUE))
        );
        panelTituloLayout.setVerticalGroup(
            panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        textFieldBuscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldBuscadorKeyReleased(evt);
            }
        });

        jLabel2.setText("Introduzca el empleado a buscar y presione la tecla Enter");

        javax.swing.GroupLayout panelBuscadorLayout = new javax.swing.GroupLayout(panelBuscador);
        panelBuscador.setLayout(panelBuscadorLayout);
        panelBuscadorLayout.setHorizontalGroup(
            panelBuscadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscadorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textFieldBuscador)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        panelBuscadorLayout.setVerticalGroup(
            panelBuscadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscadorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBuscadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        scrollPersonas.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelPersonas.setLayout(new javax.swing.BoxLayout(panelPersonas, javax.swing.BoxLayout.PAGE_AXIS));
        scrollPersonas.setViewportView(panelPersonas);

        javax.swing.GroupLayout panelPadrePersonasLayout = new javax.swing.GroupLayout(panelPadrePersonas);
        panelPadrePersonas.setLayout(panelPadrePersonasLayout);
        panelPadrePersonasLayout.setHorizontalGroup(
            panelPadrePersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPersonas)
        );
        panelPadrePersonasLayout.setVerticalGroup(
            panelPadrePersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPersonas, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelPadrePersonas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelBuscador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelPadrePersonas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1030, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 774, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldBuscadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldBuscadorKeyReleased

        boolean pos = false;

        int contador = 0;

        Component[] componentes = panelPersonas.getComponents();

        for (Component componente : componentes) {

            if (componente instanceof PanelPersona) {

                PanelPersona panelPersona = (PanelPersona) componente;

                //Normalizamos los string para que el texto coincida si contiene alguna tilde
                String nombreNormalizado = cleanString(panelPersona.persona.nombre);
                String apellidoNormalizado = cleanString(panelPersona.persona.apellido);

                if ((nombreNormalizado.toLowerCase().trim().contains(textFieldBuscador.getText().toLowerCase().trim())
                        || apellidoNormalizado.toLowerCase().trim().contains(textFieldBuscador.getText().toLowerCase().trim()))
                        && !textFieldBuscador.getText().equals("")) {

                    contador++;

                    panelPersona.setBackground(new Color(172, 193, 255));
                    
                    if (!pos) {
                        //Guardamos la posicion Y del primer elemento que encuentre
                        posicion = panelPersona.getY();
                        pos = true;
                    }
                } else {

                    //Si no encuentra coincidencia retorna al estado por defecto
                    panelPersona.setBackground(Color.WHITE);
                }
            }
        }
        //Si se pulsa Enter, movemos el scrollBar a la posicion recogida anteriormente, siempre y cuando encuentre, al menos, un comodín
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            if (posicion == 0 || contador == 0 || textFieldBuscador.getText().equals("")) {

                JOptionPane.showMessageDialog(this, "No se ha encontrado la persona deseada");
            } else {

                Thread hilo = new Thread(new Runnable() {

                    @Override
                    public void run() {

                        try {

                            JScrollBar vertical = scrollPersonas.getVerticalScrollBar();

                            for (int i = 0; i < posicion; i += 8) {

                                vertical.setValue(i);
                                Thread.sleep(1);
                            }

                        } catch (Exception e) {

                            e.printStackTrace();
                        }
                    }
                });

                hilo.start();
            }
            //Devolvemos el scrollbar a su posicion inicial cuando se pulsa backSpace
        } else if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {

            JScrollBar vertical = scrollPersonas.getVerticalScrollBar();
            vertical.setValue(0);
        }
    }//GEN-LAST:event_textFieldBuscadorKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FramePrincipal().setVisible(true);
            }
        });
    }

    /**
     * Método que nornaliza el texto que se le pase por parámetro
     *
     * @param texto
     * @return
     */
    public String cleanString(String texto) {
        texto = Normalizer.normalize(texto, Normalizer.Form.NFD);
        texto = texto.replaceAll("[\\p{InCombiningDiacriticalMarks}]", "");
        return texto;
    }

    /**
     * Método que carga todos los comodines de la clase ClassComodines
     * almacenandolos en una lista
     */
    protected void cargarComodines() {

        listaPersonas.addAll(Personas.DameListaComodin());

        for (int i = 0; i < listaPersonas.size(); i++) {

            if (i == 0) {
                crearCabecera(listaPersonas.get(i).sector);
            }

            PanelPersona panelComodin = new PanelPersona(listaPersonas.get(i));
            panelPersonas.add(panelComodin);

            if ((i + 1 <= listaPersonas.size() - 6) && !listaPersonas.get(i).sector.equals(listaPersonas.get(i + 1).sector)) {

                crearCabecera(listaPersonas.get(i + 1).sector);
            }

        }

        panelPersonas.revalidate();
        panelPersonas.repaint();
    }

    /**
     * Método para crear una cabecera
     *
     * @param texto
     */
    protected void crearCabecera(String texto) {

        JPanel panelGenerales = new JPanel(new FlowLayout(FlowLayout.LEFT));
        panelGenerales.setMinimumSize(new Dimension(980, 30));
        panelGenerales.setMaximumSize(new Dimension(32767, 30));
        JLabel labelGenerales = new JLabel(texto);
        labelGenerales.setForeground(Color.WHITE);
        panelGenerales.add(labelGenerales);
        panelGenerales.setBackground(new Color(76, 96, 137));
        panelPersonas.add(panelGenerales);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel panelBuscador;
    private javax.swing.JPanel panelPadrePersonas;
    private javax.swing.JPanel panelPersonas;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel panelTitulo;
    private javax.swing.JScrollPane scrollPersonas;
    private javax.swing.JTextField textFieldBuscador;
    // End of variables declaration//GEN-END:variables
}
